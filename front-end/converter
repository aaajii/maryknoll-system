
urls

url(r'^curriculum-list/section-detail-add/(?P<pk>\d+)$', views.sectionDetailAdd, name = 'section-detail-add'),
url(r'^curriculum-list/section-detail-form/(?P<pk>\d+)$', views.sectionDetailForm, name = 'section-detail-form'),

views

def sectionDetailAdd(request, pk='pk'):
    instance = get_object_or_404(Section, pk=pk)
    return render(request, 'enrollment/section-details-add.html', {'instance': instance})


def sectionDetailForm(request, pk='pk'):
    data = {'form_is_valid' : False }
    section = get_object_or_404(section, pk=pk)
    try:
        enrollment = Enrollment.objects.latest('enrollment_ID')
    except:
        enrollment = None
        
    
    if request.method == 'POST':
        form = SectionForms(request.POST)
        form.date_enrolled = datetime.now()
        form.student = Student.objects.get(student_ID = pk)
        if form.is_valid():
            post = form.save(commit=False)
            post.student_type='n'
            current_student.status="a"
            form.save()
            data['form_is_valid'] = True
        else:
            print form.errors
            data['form_is_valid'] = False
    else:
        form = SectionForms()
    context = {'form': form, 'student':current_student, 'last_record':enrollment}
    data['html_form'] = render_to_string('registrar/forms-registration-create.html',
        context,
        request=request,
    )
    return JsonResponse(data)